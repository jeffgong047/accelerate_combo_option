Generating frontier for markets:   0%|                                                                             | 0/20 [00:00<?, ?it/s]
Checking buy side options:   0%|                                                                                   | 0/23 [00:00<?, ?it/s]
There are 25 buy orders and 25 sell orders
#####Generating combinatorial/book/STOCK_2_SEED_2_book_AAPL_MSFT.npy with size 50 and noise 0.015625#####
Starting async computation for iteration 0
Set parameter Username
Academic license - for non-commercial use only - expires 2025-11-08
RangeIndex(start=0, stop=25, step=1) {2, 15}
RangeIndex(start=0, stop=25, step=1) {4, 8, 9, 10, 15, 19, 20, 22}
23








Checking buy side options: 100%|██████████████████████████████████████████████████████████████████████████| 23/23 [00:16<00:00,  1.48it/s]




Checking sell side options: 100%|█████████████████████████████████████████████████████████████████████████| 17/17 [00:10<00:00,  1.57it/s]







Checking buy side options: 100%|██████████████████████████████████████████████████████████████████████████| 23/23 [00:15<00:00,  1.41it/s]




Checking sell side options:  88%|████████████████████████████████████████████████████████████████▍        | 15/17 [00:09<00:01,  1.58it/s]
> /common/home/hg343/Research/accelerate_combo_option/src/combo_stock_frontier_data_preprocessor.py(507)<module>()

Checking sell side options: 100%|█████████████████████████████████████████████████████████████████████████| 17/17 [00:10<00:00,  1.50it/s]
Generating frontier for markets:   0%|                                                                             | 0/20 [05:27<?, ?it/s]
Traceback (most recent call last):
  File "/common/home/hg343/Research/accelerate_combo_option/src/combo_stock_frontier_data_preprocessor.py", line 507, in <module>
    async_result = pool.apply_async(run_with_timeout, (opt_buy_book, opt_sell_book, args.offset))
  File "/common/home/hg343/Research/accelerate_combo_option/src/combo_stock_frontier_data_preprocessor.py", line 507, in <module>
    async_result = pool.apply_async(run_with_timeout, (opt_buy_book, opt_sell_book, args.offset))
  File "/common/home/hg343/anaconda3/lib/python3.9/bdb.py", line 88, in trace_dispatch
    return self.dispatch_line(frame)
  File "/common/home/hg343/anaconda3/lib/python3.9/bdb.py", line 113, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
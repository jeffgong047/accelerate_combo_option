
Generating frontier for markets:   0%|                                                                    | 0/99 [00:00<?, ?it/s]
There are 27 buy orders and 23 sell orders
#####Generating market 1 with size 50 and noise 0.015625#####
Starting computation for iteration 1
Generating frontier for markets:   0%|                                                                    | 0/99 [00:00<?, ?it/s]/common/home/hg343/Research/accelerate_combo_option/src/market.py:276: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  frontier_labels = pd.Series(None, index=orders.index)
/common/home/hg343/Research/accelerate_combo_option/src/market.py:277: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  quote_prices = pd.Series(None, index=orders.index)  # Create a Series to store quote prices
checking match False -0.0
Processing order 0 (1/38)
checking match False -0.0
option_to_quote:        option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote      4.0     -3.0            1.0                                  319.0               1.0     143.92          1
quote price: 151.19
quote_price: 151.19, original_price: 143.92
Processing order 1 (2/38)
checking match False -0.0
option_to_quote:        option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote     -1.0      2.0            1.0                                   12.0               1.0       4.41          1
quote price: 4.61
quote_price: 4.61, original_price: 4.41
Processing order 2 (3/38)
checking match False -0.0
> /common/home/hg343/Research/accelerate_combo_option/src/market.py(220)priceQuote()
-> return None
215  	
216  	                        # Only return the price that matters for the frontier determination
217  	                        return quote_price
218  	                    else:
219  	                        breakpoint()
220  ->	                        return None
221  	                except TimeoutError:
222  	                    print("Timeout in mechanism solver for buy order quote")
223  	                    raise
224  	                except Exception as e:
225  	                    print(f"Error in mechanism solver for buy order quote: {e}")
168  	    def priceQuote(self, option_to_quote : pd.DataFrame, orders_in_market : pd.DataFrame = None, liquidity: pd.Series = None, offset: bool = True):
169  	        '''
170  	        Generate the price of of given input order w.r.t orders in the market
171  	        '''
172  	        assert len(option_to_quote.index) == 1, "option_to_quote should have only one row"
173  	        if orders_in_market is None:
174  	            market_orders = self.get_market_data_order_format()
175  	        else:
176  	            market_orders = orders_in_market.copy()
177  	
178  	        try:
179  	            # Check for infinite liquidity properly
180  	            is_match, profit = self.check_match(market_orders, offset=offset)
181  	            if is_match and (market_orders['liquidity'] == np.inf).any():
182  	                print(f"The market is matched, but contains infinite liquidity, cant get price quote")
183  	                return None
184  	
185  	            if option_to_quote.index[0] != 'quote':
186  	                option_to_quote.index = ['quote']
187  	
188  	            # Check if the specific index value is in market_orders.index
189  	            assert option_to_quote.index[0] not in market_orders.index, "option_to_quote is already in the market"
190  	
191  	            # Use iloc to access the first row regardless of index
192  	            if option_to_quote.iloc[0]['transaction_type'] == 1:
193  	                # quoting price for buy order, we want to quote price by adding a sell order with premium = 0 to the sell side of the market
194  	                new_sell_order = option_to_quote.copy()
195  	                new_sell_order.iloc[0, new_sell_order.columns.get_loc('transaction_type')] = 0
196  	                new_sell_order.iloc[0, new_sell_order.columns.get_loc('B/A_price')] = 0
197  	
198  	                # Handle liquidity column
199  	                if 'liquidity' in new_sell_order.columns:
200  	                    if 'liquidity' in option_to_quote.columns:
201  	                        new_sell_order.iloc[0, new_sell_order.columns.get_loc('liquidity')] = option_to_quote.iloc[0]['liquidity']
202  	                    else:
203  	                        new_sell_order.iloc[0, new_sell_order.columns.get_loc('liquidity')] = 1
204  	                else:
205  	                    new_sell_order['liquidity'] = 1
206  	
207  	                market_orders = pd.concat([market_orders, new_sell_order], ignore_index=False)
208  	                try:
209  	                    is_match, objVal = self.apply_mechanism(market_orders, offset)
210  	                    if is_match:
211  	                        bid_price = option_to_quote.iloc[0]['B/A_price']
212  	                        quote_price = np.round(objVal, 2)
213  	                        print(f'option_to_quote: {option_to_quote}')
214  	                        print(f'quote price: {quote_price}')
215  	
216  	                        # Only return the price that matters for the frontier determination
217  	                        return quote_price
218  	                    else:
219  	                        breakpoint()
220  ->	                        return None
221  	                except TimeoutError:
222  	                    print("Timeout in mechanism solver for buy order quote")
223  	                    raise
224  	                except Exception as e:
225  	                    print(f"Error in mechanism solver for buy order quote: {e}")
226  	                    return None
227  	            elif option_to_quote.iloc[0]['transaction_type'] == 0:
228  	                # quoting price for sell order, we want to quote price by adding a buy order with premium = max price to the buy side of the market
229  	                new_buy_order = option_to_quote.copy()
230  	                new_buy_order.iloc[0, new_buy_order.columns.get_loc('transaction_type')] = 1
231  	                new_buy_order.iloc[0, new_buy_order.columns.get_loc('B/A_price')] = 1e6  # Using 1e6 instead of sys.maxsize for numerical stability
232  	
233  	                # Handle liquidity column
234  	                if 'liquidity' in new_buy_order.columns:
235  	                    if 'liquidity' in option_to_quote.columns:
236  	                        new_buy_order.iloc[0, new_buy_order.columns.get_loc('liquidity')] = option_to_quote.iloc[0]['liquidity']
237  	                    else:
238  	                        new_buy_order.iloc[0, new_buy_order.columns.get_loc('liquidity')] = 1
239  	                else:
240  	                    new_buy_order['liquidity'] = 1
241  	
242  	                market_orders = pd.concat([market_orders, new_buy_order], ignore_index=False)
243  	                try:
244  	                    is_match, objVal = self.apply_mechanism(market_orders, offset)
245  	                    if is_match:
246  	                        ask_price = option_to_quote.iloc[0]['B/A_price']
247  	                        quote_price = np.round(1e6 - objVal, 2)
248  	                        return quote_price
249  	                    else:
250  	                        breakpoint()
251  	                        return None
252  	                except TimeoutError:
253  	                    print("Timeout in mechanism solver for sell order quote")
254  	                    raise
255  	                except Exception as e:
256  	                    print(f"Error in mechanism solver for sell order quote: {e}")
257  	                    return None
258  	            else:
259  	                raise ValueError("Invalid transaction type")
260  	
261  	        except TimeoutError:
262  	            raise  # Re-raise timeout to be handled by caller
263  	        except Exception as e:
264  	            print(f"Error in price quote: {e}")
265  	            return None
-0.0
> /common/home/hg343/Research/accelerate_combo_option/src/market.py(302)frontierGeneration()
-> quote_price = self.priceQuote(order, temp_orders, offset=offset)
> /common/home/hg343/Research/accelerate_combo_option/src/market.py(366)epsilon_frontierGeneration()
-> labeled_orders, quote_prices = self.frontierGeneration(orders, epsilon = True, offset = offset)
361  	        is_match, profit = self.check_match(orders)
362  	        if is_match:
363  	            print(f"The market is matched, cant get epsilon frontiers")
364  	            return None
365  	        else:
366  ->	            labeled_orders, quote_prices = self.frontierGeneration(orders, epsilon = True, offset = offset)
367  	            return labeled_orders, quote_prices
368  	
369  	    def update_liquidity(self, liquidity : float):
370  	        '''
371  	        Update the liquidity of the orders in the market
False
*** NameError: name 'D' is not defined
> /common/home/hg343/Research/accelerate_combo_option/src/market.py(302)frontierGeneration()
-> quote_price = self.priceQuote(order, temp_orders, offset=offset)
       option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote      8.0     -3.0           -1.0                                 1119.5               1.0       0.28          1
    option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
0       4.0     -3.0            1.0                                  319.0               1.0     143.92        inf
1      -1.0      2.0            1.0                                   12.0               1.0       4.41        inf
4       7.0      2.0            1.0                                 1358.5               1.0     236.10        inf
6       7.0      3.0            1.0                                 1218.5               1.0     485.77        inf
7       3.0     -1.0            1.0                                  333.0               1.0     151.53        inf
8      -1.0      9.0           -1.0                                  585.0               1.0       0.12        inf
9       4.0     -5.0            1.0                                  130.0               1.0     114.90        inf
10      5.0     -8.0            1.0                                   49.0               1.0      67.98        inf
11      5.0     -8.0           -1.0                                  164.5               1.0      30.91        inf
13      2.0      1.0           -1.0                                  485.5               1.0       0.51        inf
14      5.0     -2.0            1.0                                  744.5               1.0      27.50        inf
16     -1.0      4.0           -1.0                                  189.0               1.0       0.21        inf
17      3.0     -7.0           -1.0                                   22.0               1.0     178.67        inf
18      1.0     -1.0            1.0                                   28.0               1.0      61.20        inf
19      5.0      4.0           -1.0                                 1421.0               1.0       3.15        inf
20      4.0     -3.0           -1.0                                  618.0               1.0     146.11        inf
21     -1.0      3.0            1.0                                  115.5               1.0       8.93        inf
22      9.0      7.0           -1.0                                 2594.0               1.0      59.72        inf
23      1.0     -1.0            1.0                                   37.0               1.0      51.66        inf
24      8.0     -9.0            1.0                                  603.5               1.0       4.66        inf
25      5.0     -7.0           -1.0                                  489.5               1.0     250.55        inf
26      7.0     -1.0           -1.0                                 1309.5               1.0      42.65        inf
27      3.0     -2.0           -1.0                                  314.0               0.0       2.40        inf
28      3.0     -1.0           -1.0                                  403.5               0.0       0.50        inf
29      1.0     -1.0           -1.0                                   28.0               0.0       0.04        inf
30      8.0      9.0           -1.0                                 2134.5               0.0       1.16        inf
31      1.0      3.0           -1.0                                  364.0               0.0       0.04        inf
32     -1.0      4.0            1.0                                  188.0               0.0      44.16        inf
33      3.0      7.0            1.0                                 1221.0               0.0     119.92        inf
35      3.0      2.0           -1.0                                  785.0               0.0       8.30        inf
38      7.0      8.0           -1.0                                 1875.0               0.0       0.98        inf
39      8.0      7.0           -1.0                                 1642.5               0.0       0.13        inf
40      9.0      1.0            1.0                                 1775.5               0.0     111.58        inf
41      3.0      2.0           -1.0                                  713.0               0.0       0.77        inf
44      1.0     -1.0           -1.0                                   68.0               0.0       1.64        inf
48      5.0     -8.0           -1.0                                   39.5               0.0       8.72        inf
49      2.0      3.0           -1.0                                  680.5               0.0       4.50        inf
No valid quote price for order 2
> /common/home/hg343/Research/accelerate_combo_option/src/market.py(317)frontierGeneration()
-> frontier_labels[original_index] = np.nan
Processing order 4 (4/38)
checking match False -0.0
option_to_quote:        option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote      7.0      2.0            1.0                                 1358.5               1.0      236.1          1
quote price: 238.93
quote_price: 238.93, original_price: 236.1
Processing order 6 (5/38)
checking match False -0.0
option_to_quote:        option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote      7.0      3.0            1.0                                 1218.5               1.0     485.77          1
quote price: 479.27
quote_price: 479.27, original_price: 485.77
Processing order 7 (6/38)
checking match False -0.0
option_to_quote:        option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote      3.0     -1.0            1.0                                  333.0               1.0     151.53          1
quote price: 153.19
quote_price: 153.19, original_price: 151.53
Processing order 8 (7/38)
checking match False -0.0
option_to_quote:        option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote     -1.0      9.0           -1.0                                  585.0               1.0       0.12          1
quote price: -0.0
quote_price: -0.0, original_price: 0.12
Processing order 9 (8/38)
checking match False -0.0
option_to_quote:        option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote      4.0     -5.0            1.0                                  130.0               1.0      114.9          1
quote price: 126.51
quote_price: 126.51, original_price: 114.9
Processing order 10 (9/38)
checking match False -0.0
option_to_quote:        option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote      5.0     -8.0            1.0                                   49.0               1.0      67.98          1
quote price: 84.67
quote_price: 84.67, original_price: 67.98
Processing order 11 (10/38)
checking match False -0.0
option_to_quote:        option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote      5.0     -8.0           -1.0                                  164.5               1.0      30.91          1
quote price: 33.65
quote_price: 33.65, original_price: 30.91
Processing order 13 (11/38)
checking match False -0.0
option_to_quote:        option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote      2.0      1.0           -1.0                                  485.5               1.0       0.51          1
quote price: -0.0
quote_price: -0.0, original_price: 0.51
Processing order 14 (12/38)
checking match False -0.0
option_to_quote:        option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote      5.0     -2.0            1.0                                  744.5               1.0       27.5          1
quote price: 30.27
quote_price: 30.27, original_price: 27.5
Processing order 16 (13/38)
checking match False -0.0
option_to_quote:        option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote     -1.0      4.0           -1.0                                  189.0               1.0       0.21          1
quote price: 0.05
quote_price: 0.05, original_price: 0.21
Processing order 17 (14/38)
checking match False -0.0
option_to_quote:        option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote      3.0     -7.0           -1.0                                   22.0               1.0     178.67          1
quote price: 173.56
quote_price: 173.56, original_price: 178.67
Processing order 18 (15/38)
checking match False -0.0
option_to_quote:        option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote      1.0     -1.0            1.0                                   28.0               1.0       61.2          1
quote price: 62.84
quote_price: 62.84, original_price: 61.2
Processing order 19 (16/38)
checking match False -0.0
option_to_quote:        option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote      5.0      4.0           -1.0                                 1421.0               1.0       3.15          1
quote price: 5.31
quote_price: 5.31, original_price: 3.15
Processing order 20 (17/38)
checking match False -0.0
option_to_quote:        option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote      4.0     -3.0           -1.0                                  618.0               1.0     146.11          1
quote price: 148.53
quote_price: 148.53, original_price: 146.11
Processing order 21 (18/38)
checking match False -0.0
option_to_quote:        option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote     -1.0      3.0            1.0                                  115.5               1.0       8.93          1
quote price: 6.16
quote_price: 6.16, original_price: 8.93
Processing order 22 (19/38)
checking match False -0.0
option_to_quote:        option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote      9.0      7.0           -1.0                                 2594.0               1.0      59.72          1
quote price: 66.22
quote_price: 66.22, original_price: 59.72
Processing order 23 (20/38)
checking match False -0.0
option_to_quote:        option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote      1.0     -1.0            1.0                                   37.0               1.0      51.66          1
quote price: 53.84
quote_price: 53.84, original_price: 51.66
Processing order 24 (21/38)
checking match False -0.0
option_to_quote:        option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote      8.0     -9.0            1.0                                  603.5               1.0       4.66          1
quote price: 16.48
quote_price: 16.48, original_price: 4.66
Processing order 25 (22/38)
checking match False -0.0
option_to_quote:        option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote      5.0     -7.0           -1.0                                  489.5               1.0     250.55          1
quote price: 249.75
quote_price: 249.75, original_price: 250.55
Processing order 26 (23/38)
checking match False -0.0
option_to_quote:        option1  option2  C=Call, P=Put  Strike Price of the Option Times 1000  transaction_type  B/A_price  liquidity
quote      7.0     -1.0           -1.0                                 1309.5               1.0      42.65          1
quote price: 34.92
quote_price: 34.92, original_price: 42.65
Processing order 27 (24/38)
checking match False -0.0
quote_price: 2.05, original_price: 2.4
Processing order 28 (25/38)
checking match False -0.0
quote_price: 0.7, original_price: 0.5
Processing order 29 (26/38)
checking match False -0.0
quote_price: 1.0, original_price: 0.04
Processing order 30 (27/38)
checking match False -0.0
quote_price: 1.0, original_price: 1.16
Processing order 31 (28/38)
checking match False -0.0
quote_price: 0.57, original_price: 0.04
Processing order 32 (29/38)
checking match False -0.0
quote_price: 72.37, original_price: 44.16
Processing order 33 (30/38)
checking match False -0.0
quote_price: 125.28, original_price: 119.92
Processing order 35 (31/38)
checking match False -0.0
quote_price: 24.58, original_price: 8.3
Processing order 38 (32/38)
checking match False -0.0
quote_price: 0.88, original_price: 0.98
Processing order 39 (33/38)
checking match False -0.0
quote_price: 0.58, original_price: 0.13
Processing order 40 (34/38)
checking match False -0.0
quote_price: 414.76, original_price: 111.58
Processing order 41 (35/38)
checking match False -0.0
quote_price: 0.38, original_price: 0.77
Processing order 44 (36/38)
checking match False -0.0
quote_price: 1.0, original_price: 1.64
Processing order 48 (37/38)
checking match False -0.0
quote_price: 40.17, original_price: 8.72
Processing order 49 (38/38)
checking match False -0.0
quote_price: 7.02, original_price: 4.5
    option1  option2  C=Call, P=Put  ...  B/A_price  liquidity  belongs_to_frontier
0       4.0     -3.0            1.0  ...     143.92          1                  0.0
1      -1.0      2.0            1.0  ...       4.41          1                  0.0
2       8.0     -3.0           -1.0  ...       0.28          1                  NaN
4       7.0      2.0            1.0  ...     236.10          1                  0.0
6       7.0      3.0            1.0  ...     485.77          1                  1.0
7       3.0     -1.0            1.0  ...     151.53          1                  0.0
8      -1.0      9.0           -1.0  ...       0.12          1                  1.0
9       4.0     -5.0            1.0  ...     114.90          1                  0.0
10      5.0     -8.0            1.0  ...      67.98          1                  0.0
11      5.0     -8.0           -1.0  ...      30.91          1                  0.0
13      2.0      1.0           -1.0  ...       0.51          1                  1.0
14      5.0     -2.0            1.0  ...      27.50          1                  0.0
16     -1.0      4.0           -1.0  ...       0.21          1                  1.0
17      3.0     -7.0           -1.0  ...     178.67          1                  1.0
18      1.0     -1.0            1.0  ...      61.20          1                  0.0
19      5.0      4.0           -1.0  ...       3.15          1                  0.0
20      4.0     -3.0           -1.0  ...     146.11          1                  0.0
21     -1.0      3.0            1.0  ...       8.93          1                  1.0
22      9.0      7.0           -1.0  ...      59.72          1                  0.0
23      1.0     -1.0            1.0  ...      51.66          1                  0.0
24      8.0     -9.0            1.0  ...       4.66          1                  0.0
25      5.0     -7.0           -1.0  ...     250.55          1                  1.0
26      7.0     -1.0           -1.0  ...      42.65          1                  1.0
27      3.0     -2.0           -1.0  ...       2.40          1                  0.0
28      3.0     -1.0           -1.0  ...       0.50          1                  1.0
29      1.0     -1.0           -1.0  ...       0.04          1                  1.0
30      8.0      9.0           -1.0  ...       1.16          1                  0.0
31      1.0      3.0           -1.0  ...       0.04          1                  1.0
32     -1.0      4.0            1.0  ...      44.16          1                  1.0
33      3.0      7.0            1.0  ...     119.92          1                  1.0
35      3.0      2.0           -1.0  ...       8.30          1                  1.0
38      7.0      8.0           -1.0  ...       0.98          1                  0.0
39      8.0      7.0           -1.0  ...       0.13          1                  1.0
40      9.0      1.0            1.0  ...     111.58          1                  1.0
41      3.0      2.0           -1.0  ...       0.77          1                  0.0
44      1.0     -1.0           -1.0  ...       1.64          1                  0.0
48      5.0     -8.0           -1.0  ...       8.72          1                  1.0
49      2.0      3.0           -1.0  ...       4.50          1                  1.0
[38 rows x 8 columns]
> /common/home/hg343/Research/accelerate_combo_option/src/combo_stock_frontier_data_preprocessor_forked.py(178)<module>()
-> if frontier_option_label_epsilon is not None and not np.isnan(frontier_option_label_epsilon['belongs_to_frontier']).any():
Generating frontier for markets:   0%|                                                                    | 0/99 [10:19<?, ?it/s]
Traceback (most recent call last):
  File "/common/home/hg343/Research/accelerate_combo_option/src/combo_stock_frontier_data_preprocessor_forked.py", line 178, in <module>
    if frontier_option_label_epsilon is not None and not np.isnan(frontier_option_label_epsilon['belongs_to_frontier']).any():
  File "/common/home/hg343/Research/accelerate_combo_option/src/combo_stock_frontier_data_preprocessor_forked.py", line 178, in <module>
    if frontier_option_label_epsilon is not None and not np.isnan(frontier_option_label_epsilon['belongs_to_frontier']).any():
  File "/common/home/hg343/anaconda3/lib/python3.9/bdb.py", line 88, in trace_dispatch
    return self.dispatch_line(frame)
  File "/common/home/hg343/anaconda3/lib/python3.9/bdb.py", line 112, in dispatch_line
    self.user_line(frame)
  File "/common/home/hg343/anaconda3/lib/python3.9/pdb.py", line 262, in user_line
    self.interaction(frame, None)
  File "/common/home/hg343/anaconda3/lib/python3.9/pdb.py", line 357, in interaction
    self._cmdloop()
  File "/common/home/hg343/anaconda3/lib/python3.9/pdb.py", line 322, in _cmdloop
    self.cmdloop()
  File "/common/home/hg343/anaconda3/lib/python3.9/cmd.py", line 126, in cmdloop
    line = input(self.prompt)
  File "/common/home/hg343/Research/accelerate_combo_option/src/combo_stock_frontier_data_preprocessor_forked.py", line 60, in signal_handler
    sys.exit(1)
  File "/common/home/hg343/anaconda3/lib/python3.9/site-packages/wandb/sdk/lib/exit_hooks.py", line 36, in exit
    self._orig_exit(orig_code)  # type: ignore
SystemExit: 1
Ctrl+C received. Terminating processes...